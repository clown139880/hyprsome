package main

import (
	"encoding/json"
	"flag"
	"os/exec"
	"strconv"
)

// var targetWorkspace = flag.Int64("workspace", 0, "The workspace to target")

func main() {
	flag.Parse()
	targetWorkspace, _ := strconv.ParseInt(flag.Arg(0), 10, 64)

	//run cmd && get output
	out, err := exec.Command("hyprctl", "activewindow", "-j").Output()
	if err != nil {
		panic(err)
	}
	var activeWindow ActiveWindow
	//print output
	json.Unmarshal(out, &activeWindow)

	finalWorkspace := targetWorkspace + 10*activeWindow.Monitor

	exec.Command("hyprctl", "dispatch", "workspace", strconv.FormatInt(finalWorkspace, 10)).Output()
}

// Generated by https://quicktype.io

type ActiveWindow struct {
	Address   string    `json:"address"`
	At        []int64   `json:"at"`
	Size      []int64   `json:"size"`
	Workspace Workspace `json:"workspace"`
	Floating  bool      `json:"floating"`
	Monitor   int64     `json:"monitor"`
	Class     string    `json:"class"`
	Title     string    `json:"title"`
	PID       int64     `json:"pid"`
	Xwayland  bool      `json:"xwayland"`
}

type Workspace struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}
